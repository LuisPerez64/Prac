#!/usr/bin/env python

print "Running the MakeMaker script...\n"

makefile = open( "Makefile", 'w' )
objects = []
ext = ""
flags = ""

creatorname = raw_input("Enter your name: ")
projname = raw_input("Enter the project name: ")
exname = raw_input("Enter the name of the executable: ")
print ""
compiler = raw_input("gcc or g++? ")
if compiler == "gcc":
    ext = "c"
    flags = "-ansi -pedantic -Wall -g"

if compiler == "g++":
    ext = "cpp"
    flags = "--std=c++0x -Wall -g"

i = 1
print "Enter the name of each file on each line (without the file extension)."
print "Enter a 0 when done:\n"
while True:
    obj = raw_input( "File %d: " % i )
    if obj == "0":
        break
    objects.append(obj)
    i = i + 1

makefile.write( "#Makefile for %s, written by %s\n" % (projname, creatorname) )
makefile.write( "#This Makefile was created using Patrick Son's MakeMaker script.\n\n" )
makefile.write( "CC = %s\nCFLAGS = %s\nOUT = %s\nOBJS =" % (compiler, flags, exname ) )

for item in objects:
    makefile.write( " %s.o" % item )

makefile.write( "\nall: $(OUT) $(OBJS)\n\n$(OUT):" )

for item in objects:
    makefile.write( " %s.o" % item )

makefile.write( "\n\t$(CC) $(CFLAGS) -o $(OUT) $(OBJS)\n" )

for item in objects:
    makefile.write( "%s.o: %s.%s\n\t$(CC) $(CFLAGS) -c %s.%s\n" % (item, item, ext, item, ext) )

makefile.write( "clean:\n\trm -rf *.o $(OUT)\nneat:\n\trm -rf *~ *#*#" )

print "\nMakefile sucessfully created and placed in current directory."
print "Goodbye!\n"

makefile.close()
