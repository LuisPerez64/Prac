Section 1: Glossary

problem solving: The process of formulating a problem, finding a solution, and 
expressing the solution.

high-level language: A programming language like Python that is designed to be
easy for humans to read and write.

low-level language: A programming language that is designed to be easy for a
computer to execute; also called “machine language” or “assembly language.”

portability: A property of a program that can run on more than one kind of 
computer.

interpret: To execute a program in a high-level language by translating it one 
line at a time.

compile: To translate a program written in a high-level language into a 
low-level language all at once, in preparation for later execution.

source code: A program in a high-level language before being compiled.

object code: The output of the compiler after the program is translated.

executable: Another name for the object code that is ready to be executed.

prompt: Charactes displayed by the interpreter to indicate that it is ready to 
take input from the user.

script: A program stored in a file (usually one that will be interpreted).

interactive mode: A way of using the Python interpreter by typing commands and 
expressions at the prompt.

script mode: A way of using the Python interpreter to read and execute 
statements in a script.

program: A set of instructions that specifies computation.

algorithm: A general process for solving a category of problems.

bug: An error in a program.

debugging: The process of finding and removing nay of the three kinds of
programming errors.

syntax: The structure of program.

syntax error: An error in a program that makes it impossible to parse,
(and therefore impossible to interpret).

exception: An error that is detected while the program is running.

semantics: The meaning of a program.

semantic error: An error in a program that makes it do something ofther than
what the programmer intended.

natural language: Any one of the languages that evolved naturally.

formal language: Any one of the languages that people have designed for 
specific purposes, such as representing mathematical ideas or computer programs
; all programming languages are formal languages.

token: One of the basic elements of the syntactic structure of a program, 
analogous to a word in a natural language.

parse: To examine a program and analyze the syntactic  structure.

print statement: An instruction that causes the Python interpreter to display
a value on the screen.

